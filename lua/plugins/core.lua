return {
  { "ellisonleao/gruvbox.nvim", lazy = true },
  { "sainnhe/gruvbox-material", lazy = true },
  { "mhartington/oceanic-next", lazy = true },
  { "sainnhe/sonokai", lazy = true },
  { "EdenEast/nightfox.nvim", lazy = true },
  {
    "xero/miasma.nvim",
    lazy = true,
  },
  {
    "folke/tokyonight.nvim",
    lazy = true,
  },
  {
    "catppuccin/nvim",
    lazy = true,
    priority = 1000,
    name = "catppuccin",
    opts = {
      integrations = {

        cmp = true,
        gitsigns = true,
        illuminate = true,
        indent_blankline = { enabled = true },
        lsp_trouble = true,
        mason = true,
        mini = true,
        native_lsp = {
          enabled = true,
          underlines = {
            errors = { "undercurl" },
            hints = { "undercurl" },
            warnings = { "undercurl" },
            information = { "undercurl" },
          },
        },
        navic = { enabled = true, custom_bg = "lualine" },
        neotest = true,
        noice = true,
        notify = true,
        neotree = true,
        semantic_tokens = true,
        telescope = true,
        treesitter = true,
        which_key = true,
      },
    },
  },
  -- {
  --   "nvim-tree/nvim-web-devicons",
  --   lazy = true,
  --   opts = {
  --     override_by_extension = {
  --       ["toml"] = {
  --         icon = "",
  --         color = "#ffffff",
  --         cterm_color = "231",
  --         name = "Toml",
  --       },
  --     },
  --   },
  -- },

  {
    "LazyVim/LazyVim",
    opts = {
      colorscheme = "gruvbox-material",
      icons = {
        dap = {
          Stopped = { " ", "DiagnosticWarn", "DapStoppedLine" },
          Breakpoint = " ",
          BreakpointCondition = " ",
          BreakpointRejected = { " ", "DiagnosticError" },
          LogPoint = "> ",
        },
        diagnostics = {
          Error = " ",
          Warn = " ",
          Hint = " ",
          Info = " ",
        },
        git = {
          added = "~",
          modified = "~",
          removed = "~",
        },
        kinds = {
          Array = "~",
          Boolean = "~",
          Copilot = "~",
          Key = "~",
          Namespace = "{}~",
          Null = "∅~",
          Number = "№~",
          Object = "~",
          Package = "~",
          String = "󰅳~",
          Text = "󰦨~",
          Method = "m~",
          Function = "󰊕~", -- 
          Constructor = "~",
          Field = "~",
          Variable = "󰫧~",
          Class = "~",
          Interface = "~",
          Module = "~",
          Property = "~",
          Unit = "~",
          Value = "v~",
          Enum = "~",
          Keyword = "~",
          Snippet = "~",
          Color = "~",
          File = "~",
          Reference = "~",
          Folder = "~",
          EnumMember = "~",
          Constant = "~",
          Struct = "~",
          Event = "~",
          TypeParameter = "~",
          Operator = "~",
        },
      },
    },
  },
}

-- for Monolisa font
-- kinds = {
--           Array = "~",
--           Boolean = "~",
--           Copilot = "~",
--           Key = "~",
--           Namespace = "~",
--           Null = "∅~",
--           Number = "№~",
--           Object = "~",
--           Package = "~",
--           String = "~",
--           Text = "~",
--           Method = "m~",
--           Function = "󰊕~", -- 
--           Constructor = "~",
--           Field = "~",
--           Variable = "~",
--           Class = "~",
--           Interface = "~",
--           Module = "~",
--           Property = "~",
--           Unit = "~",
--           Value = "~",
--           Enum = "~",
--           Keyword = "~",
--           Snippet = "~",
--           Color = "~",
--           File = "~",
--           Reference = "~",
--           Folder = "~",
--           EnumMember = "~",
--           Constant = "~",
--           Struct = "~",
--           Event = "~",
--           TypeParameter = "~",
--           Operator = "~",
--         },
